{"version":3,"sources":["src/js/CircularSlider.js","src/js/main.js"],"names":["CircularSlider","options","container","radius","color","minValue","maxValue","step","name","currency","svgNS","grabberDraggable","range","circumference","Math","PI","stepInCircumference","stepAngle","baseStrokeColor","grabberStroke","grabberFill","strokeWidth","grabberStrokeWidth","strokeGap","svgSize","initialized","classList","contains","initialize","selectAndUpdateSize","initializeFirstInstance","createLegend","createCircleSvg","legend","document","createElement","legendColorIndicator","legendName","legendValue","add","setAttributes","class","style","innerHTML","append","legendContainer","circleWrapper","createElementNS","baseCircle","clickableCircle","grabber","indicatorCircle","strokeDashCalculated","floor","cx","cy","r","stroke","fill","transform","opacity","updateValues_","updateValues","bind","addEventListener","removeEventListener","e","preventDefault","passive","sliderSvg","sliderSvgDimensions","getBoundingClientRect","svgCenter","x","height","y","width","dx","clientX","changedTouches","dy","clientY","eventAngle","atan2","stepAdjustedAngle","round","sin","cos","valueInCircumference","querySelector","getAttribute","setSvgSize","createSliderContainers","sliderContainer","viewBox","el","attributeAndValue","Object","entries","forEach","attribute","value","setAttribute","sliderContainer2","slider1","slider2","slider3","slider5","slider6","slider7","slider8"],"mappings":"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","file":"main.3db09d7b.js","sourceRoot":"..","sourcesContent":["/*\nCircularSlider class takes in one argument (Type: object)\n\nOptions object properties:\ncontainer (DOM element) - mandatory\nradius (Number) - mandatory\ncolor (String) - mandatory\nminValue (Number) - mandatory\nmaxValue (Number) - mandatory\nstep (Number) - mandatory\nname (String) - optional\ncurrency (Currency) - optional\n*/\n\nexport default class CircularSlider {\n  constructor(options) {\n    this.container = options.container\n    this.radius = options.radius\n    this.color = options.color\n    this.minValue = options.minValue\n    this.maxValue = options.maxValue\n    this.step = options.step\n    this.name = options.name || ''\n    this.currency = options.currency || ''\n\n    this.svgNS = 'http://www.w3.org/2000/svg'\n    this.grabberDraggable = false\n    this.range = this.maxValue - this.minValue\n    this.circumference = 2 * Math.PI * this.radius\n    this.stepInCircumference = (this.range / this.step) * this.circumference\n    this.stepAngle = (this.step / this.range) * 2 * Math.PI\n    this.baseStrokeColor = '#dadada'\n    this.grabberStroke = '#cccccc'\n    this.grabberFill = '#ffffff'\n    this.strokeWidth = 30\n    this.grabberStrokeWidth = 2\n    this.strokeGap = 2\n    this.svgSize = this.radius * 2 + this.strokeWidth + 2 * this.grabberStrokeWidth\n    this.initialized = this.container.classList.contains('circular-slider-initialized')\n\n    this.initialize()\n  }\n\n  initialize() {\n    this.initialized ? this.selectAndUpdateSize() : this.initializeFirstInstance()\n\n    this.createLegend()\n    this.createCircleSvg()\n  }\n\n  createLegend() {\n    const legend = document.createElement('div')\n    const legendColorIndicator = document.createElement('div')\n    const legendName = document.createElement('span')\n    this.legendValue = document.createElement('span')\n\n    legendName.classList.add('legend-name')\n    this.legendValue.classList.add('legend-value')\n\n    this.setAttributes(legend, {\n      class: 'legend-item',\n      style: `border-color: ${this.color}`,\n    })\n\n    this.setAttributes(legendColorIndicator, {\n      class: 'legend-color-indicator',\n      style: `background: ${this.color}`,\n    })\n\n    this.legendValue.innerHTML = this.currency + this.minValue\n    legendName.innerHTML = this.name\n\n    legend.append(this.legendValue, legendName, legendColorIndicator)\n    this.legendContainer.append(legend)\n  }\n\n  createCircleSvg() {\n    const circleWrapper = document.createElementNS(this.svgNS, 'g')\n    const baseCircle = document.createElementNS(this.svgNS, 'circle')\n    const clickableCircle = document.createElementNS(this.svgNS, 'circle')\n    this.grabber = document.createElementNS(this.svgNS, 'circle')\n    this.indicatorCircle = document.createElementNS(this.svgNS, 'circle')\n\n    // Circle stroke dash is relative to step value\n    let strokeDashCalculated = (this.step / this.range) * this.circumference - this.strokeGap\n\n    // Not smaller than stroke gap\n    // Adjust stroke dash, so that the circle always ends with a stroke gap\n    if (strokeDashCalculated < this.strokeGap) {\n      strokeDashCalculated =\n        this.strokeGap +\n        (this.circumference % (2 * this.strokeGap)) / Math.floor(this.circumference / (2 * this.strokeGap))\n    }\n\n    this.setAttributes(baseCircle, {\n      cx: 0,\n      cy: 0,\n      r: this.radius,\n      stroke: this.baseStrokeColor,\n      fill: 'none',\n      transform: 'rotate(-90, 0, 0)',\n      'stroke-width': this.strokeWidth,\n      'stroke-dasharray': `${strokeDashCalculated} ${this.strokeGap}`,\n    })\n\n    this.setAttributes(this.indicatorCircle, {\n      cx: 0,\n      cy: 0,\n      r: this.radius,\n      stroke: this.color,\n      opacity: 0.7,\n      fill: 'none',\n      transform: 'rotate(-90, 0, 0)',\n      'stroke-width': this.strokeWidth,\n      'stroke-dasharray': `0  ${this.circumference}`,\n    })\n\n    this.setAttributes(clickableCircle, {\n      cx: 0,\n      cy: 0,\n      r: this.radius,\n      stroke: 'transparent',\n      fill: 'none',\n      'stroke-width': this.strokeWidth,\n    })\n\n    this.setAttributes(this.grabber, {\n      cx: 0,\n      cy: -this.radius,\n      r: this.strokeWidth / 2 + this.grabberStrokeWidth / 2,\n      fill: this.grabberFill,\n      stroke: this.grabberStroke,\n      'stroke-width': this.grabberStrokeWidth,\n      style: 'touch-action: none',\n    })\n\n    const updateValues_ = this.updateValues.bind(this)\n\n    // Click events\n    clickableCircle.addEventListener('click', updateValues_)\n\n    this.grabber.addEventListener('mousedown', () => {\n      this.grabberDraggable = true\n      document.addEventListener('mousemove', updateValues_)\n    })\n\n    document.addEventListener('mouseup', () => {\n      if (this.grabberDraggable) {\n        document.removeEventListener('mousemove', updateValues_)\n        this.grabberDraggable = false\n      }\n    })\n\n    // Touch events\n    this.grabber.addEventListener(\n      'touchstart',\n      (e) => {\n        e.preventDefault()\n\n        this.grabberDraggable = true\n        document.addEventListener('touchmove', updateValues_, { passive: false })\n      },\n      { passive: false }\n    )\n\n    document.addEventListener('touchend', () => {\n      if (this.grabberDraggable) {\n        document.removeEventListener('touchmove', updateValues_)\n        this.grabberDraggable = false\n      }\n    })\n\n    // Append all elements to SVG\n    circleWrapper.append(baseCircle, this.indicatorCircle, clickableCircle, this.grabber)\n    this.sliderSvg.append(circleWrapper)\n  }\n\n  updateValues(e) {\n    e.preventDefault()\n\n    const sliderSvgDimensions = this.sliderSvg.getBoundingClientRect()\n\n    const svgCenter = {\n      x: sliderSvgDimensions.x + sliderSvgDimensions.height / 2,\n      y: sliderSvgDimensions.y + sliderSvgDimensions.width / 2,\n    }\n\n    const pageX = e.clientX || e.changedTouches[0].clientX\n    const pageY = e.clientY || e.changedTouches[0].clientY\n\n    // Event position difference from center\n    const dx = pageX - svgCenter.x\n    const dy = svgCenter.y - pageY\n\n    // Positive angle value in radians\n    const eventAngle = (Math.atan2(dx, dy) + 2 * Math.PI) % (2 * Math.PI)\n\n    const stepAdjustedAngle = Math.round(eventAngle / this.stepAngle) * this.stepAngle\n\n    this.setAttributes(this.grabber, {\n      cx: this.radius * Math.sin(stepAdjustedAngle),\n      cy: -this.radius * Math.cos(stepAdjustedAngle),\n    })\n\n    const valueInCircumference = (stepAdjustedAngle / (2 * Math.PI)) * this.circumference\n\n    this.setAttributes(this.indicatorCircle, {\n      'stroke-dasharray': `${valueInCircumference} ${this.circumference - valueInCircumference}`,\n    })\n\n    this.legendValue.innerHTML =\n      this.currency + (Math.round((stepAdjustedAngle / (2 * Math.PI)) * this.range) + this.minValue)\n  }\n\n  selectAndUpdateSize() {\n    this.sliderSvg = this.container.querySelector('.circular-slider-svg')\n    this.legendContainer = this.container.querySelector('.legend-container')\n\n    if (this.svgSize > this.sliderSvg.getAttribute('height')) {\n      this.setSvgSize()\n    }\n  }\n\n  initializeFirstInstance() {\n    this.sliderSvg = document.createElementNS(this.svgNS, 'svg')\n    this.setSvgSize()\n    this.createSliderContainers()\n    this.sliderSvg.classList.add('circular-slider-svg')\n    this.container.classList.add('circular-slider-container', 'circular-slider-initialized')\n    this.sliderContainer.append(this.sliderSvg)\n  }\n\n  setSvgSize() {\n    this.setAttributes(this.sliderSvg, {\n      viewBox: `${-this.svgSize / 2} ${-this.svgSize / 2} ${this.svgSize} ${this.svgSize}`,\n      width: this.svgSize,\n      height: this.svgSize,\n    })\n  }\n\n  createSliderContainers() {\n    this.legendContainer = document.createElement('div')\n    this.sliderContainer = document.createElement('div')\n\n    this.legendContainer.classList.add('legend-container')\n    this.sliderContainer.classList.add('slider-container')\n\n    this.container.append(this.legendContainer, this.sliderContainer)\n  }\n\n  setAttributes(el, attributeAndValue) {\n    Object.entries(attributeAndValue).forEach(([attribute, value]) => {\n      el.setAttribute(attribute, value)\n    })\n  }\n}\n","import CircularSlider from './CircularSlider'\n\nconst sliderContainer = document.querySelector('#slider-container')\nconst sliderContainer2 = document.querySelector('#slider-container2')\n\n//first container\nconst slider1 = new CircularSlider({\n  container: sliderContainer,\n  color: '#bada55',\n  minValue: 0,\n  maxValue: 100,\n  step: 25,\n  radius: 70,\n  name: 'Fork',\n  currency: '€',\n})\n\nconst slider2 = new CircularSlider({\n  container: sliderContainer,\n  color: 'hotpink',\n  minValue: 0,\n  maxValue: 1000,\n  step: 100,\n  radius: 110,\n  name: 'Shock',\n  currency: '€',\n})\n\nconst slider3 = new CircularSlider({\n  container: sliderContainer,\n  color: 'tomato',\n  minValue: 1000,\n  maxValue: 5000,\n  step: 50,\n  radius: 150,\n  name: 'Handlebars',\n  currency: '€',\n})\n\nconst slider5 = new CircularSlider({\n  container: sliderContainer,\n  color: 'red',\n  minValue: 0,\n  maxValue: 10,\n  step: 1,\n  radius: 190,\n  name: 'Rad value',\n})\n\n//second container\nconst slider6 = new CircularSlider({\n  container: sliderContainer2,\n  color: 'tomato',\n  minValue: 0,\n  maxValue: 1000,\n  step: 2,\n  radius: 110,\n  currency: '$',\n})\n\nconst slider7 = new CircularSlider({\n  container: sliderContainer2,\n  color: 'purple',\n  minValue: 0,\n  maxValue: 1000,\n  step: 10,\n  radius: 150,\n  currency: '$',\n})\n\nconst slider8 = new CircularSlider({\n  container: sliderContainer2,\n  color: 'lightgreen',\n  minValue: 10,\n  maxValue: 20,\n  step: 1,\n  radius: 190,\n  currency: '$',\n})\n"]}